name: Build

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/*.yml'
      - '.github/actions/pullrequest.yml'
      - '.idea/copyright/*.xml' 
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        PROJECT: 'hydraulic'
    steps:
      - name: Checkout repository and submodules
        # See https://github.com/actions/checkout/commits
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          submodules: recursive

      - name: Validate Gradle Wrapper
        # See https://github.com/gradle/wrapper-validation-action/commits
        uses: gradle/wrapper-validation-action@b231772637bb498f11fdbc86052b6e8a8dc9fc92 # v2.1.2

        # See https://github.com/actions/setup-java/commits
      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          java-version: 17
          distribution: temurin
          
      - name: Build
        # See https://github.com/gradle/gradle-build-action/commits
        uses: gradle/gradle-build-action@ebc47c299ce5f6b106c1663c8c99ab07e0ce1666 # v3.1.0
        with:
          arguments: build
          gradle-home-cache-cleanup: true
          
      - name: Archive artifacts (Hydraulic Fabric)
        # See https://github.com/actions/upload-artifact/commits
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        if: success()
        with:
          name: Hydraulic Fabric
          path: fabric/build/libs/hydraulic-fabric.jar
          if-no-files-found: error
      - name: Archive artifacts (Hydraulic NeoForge)
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
        if: success()
        with:
          name: Hydraulic NeoForge
          path: neoforge/build/libs/hydraulic-neoforge.jar
          if-no-files-found: error

      - name: Get Release Metadata
        if: ${{ success() && github.repository == 'GeyserMC/Hydraulic' && github.ref_name == 'master' }}
        uses: Kas-tle/base-release-action@b863fa0f89bd15267a96a72efb84aec25f168d4c # https://github.com/Kas-tle/base-release-action/releases/tag/main-11
        with:
          appID: ${{ secrets.RELEASE_APP_ID }}
          appPrivateKey: ${{ secrets.RELEASE_APP_PK }}
          files: |
            fabric:fabric/build/libs/hydraulic-fabric.jar
            neoforge:neoforge/build/libs/hydraulic-neoforge.jar
          releaseEnabled: false
          saveMetadata: true

      - name: Update Generated Metadata
        if: ${{ success() && github.repository == 'GeyserMC/Hydraulic' && github.ref_name == 'master' }}
        run: |
          cat metadata.json
          echo
          mv metadata.json metadata.json.tmp
          version=$(cat gradle.properties | grep -o "^version=[0-9\\.]*" | cut -d"=" -f2)
          jq --arg project "${PROJECT}" --arg version "${version}" '
            .
            | .changes |= map({"commit", "summary", "message"}) 
            | .downloads |= map_values({"name", "sha256"})
            | {$project, "repo", $version, "number": .build, "changes", "downloads"}
          ' metadata.json.tmp > metadata.json
          cat metadata.json

      - name: Publish to Downloads API
        if: ${{ success() && github.repository == 'GeyserMC/Hydraulic' && github.ref_name == 'master' }}
        shell: bash
        env:
          DOWNLOADS_USERNAME: ${{ vars.DOWNLOADS_USERNAME }}
          DOWNLOADS_PRIVATE_KEY: ${{ secrets.DOWNLOADS_PRIVATE_KEY }}
          DOWNLOADS_SERVER_IP: ${{ secrets.DOWNLOADS_SERVER_IP }}
        run: |
          # Save the private key to a file
          echo "$DOWNLOADS_PRIVATE_KEY" > id_ecdsa
          chmod 600 id_ecdsa
          # Create the build folder
          ssh -o StrictHostKeyChecking=no -i id_ecdsa $DOWNLOADS_USERNAME@$DOWNLOADS_SERVER_IP mkdir -p "~/uploads/$PROJECT/$GITHUB_RUN_NUMBER/"
          # Copy over artifacts
          rsync -P -e "ssh -o StrictHostKeyChecking=no -i id_ecdsa" fabric/build/libs/hydraulic-*.jar $DOWNLOADS_USERNAME@$DOWNLOADS_SERVER_IP:~/uploads/$PROJECT/$GITHUB_RUN_NUMBER/
          rsync -P -e "ssh -o StrictHostKeyChecking=no -i id_ecdsa" neoforge/build/libs/hydraulic-*.jar $DOWNLOADS_USERNAME@$DOWNLOADS_SERVER_IP:~/uploads/$PROJECT/$GITHUB_RUN_NUMBER/
          # Run the build script
          rsync -P -e "ssh -o StrictHostKeyChecking=no -i id_ecdsa" metadata.json $DOWNLOADS_USERNAME@$DOWNLOADS_SERVER_IP:~/uploads/$PROJECT/$GITHUB_RUN_NUMBER/
