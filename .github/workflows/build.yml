name: Build

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/*.yml'
      - '.github/actions/pullrequest.yml'
      - '.idea/copyright/*.xml' 
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        # See https://github.com/actions/checkout/commits
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          submodules: recursive

      - name: Validate Gradle Wrapper
        # See https://github.com/gradle/wrapper-validation-action/commits
        uses: gradle/actions/wrapper-validation@db19848a5fa7950289d3668fb053140cf3028d43 # v3.3.2

      - name: Setup Java
        # See https://github.com/actions/setup-java/commits
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          java-version: 21
          distribution: temurin
          
      - name: Setup Gradle
        # See https://github.com/gradle/actions/commits
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
        with:
          gradle-home-cache-cleanup: true

      - name: Build Hydraulic
        run: ./gradlew build
          
      - name: Archive artifacts (Hydraulic Fabric)
        # See https://github.com/actions/upload-artifact/commits
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: success()
        with:
          name: Hydraulic Fabric
          path: fabric/build/libs/hydraulic-fabric.jar
          if-no-files-found: error
      - name: Archive artifacts (Hydraulic NeoForge)
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
        if: success()
        with:
          name: Hydraulic NeoForge
          path: neoforge/build/libs/hydraulic-neoforge.jar
          if-no-files-found: error

      - name: Get Version
        if: ${{ success() && github.repository == 'GeyserMC/Hydraulic' && github.ref_name == 'master' }}
        id: get-version
        run: |
          version=$(cat gradle.properties | grep -o "^version=[0-9\\.]*" | cut -d"=" -f2)
          echo "VERSION=${version}" >> $GITHUB_OUTPUT

      - name: Get Release Metadata
        if: ${{ success() && github.repository == 'GeyserMC/Hydraulic' && github.ref_name == 'master' }}
        uses: GeyserMC/actions/release@master
        id: metadata
        with:
          appID: ${{ secrets.RELEASE_APP_ID }}
          appPrivateKey: ${{ secrets.RELEASE_APP_PK }}
          files: |
            fabric:fabric/build/libs/hydraulic-fabric.jar
            neoforge:neoforge/build/libs/hydraulic-neoforge.jar
          releaseEnabled: false
          saveMetadata: true
          releaseProject: 'hydraulic'
          releaseVersion: ${{ steps.get-version.outputs.VERSION }}

      - name: Publish to Downloads API
        if: ${{ success() && github.repository == 'GeyserMC/Hydraulic' && github.ref_name == 'master' }}
        uses: GeyserMC/actions/upload-release@master
        with:
          username: ${{ vars.DOWNLOADS_USERNAME }}
          privateKey: ${{ secrets.DOWNLOADS_PRIVATE_KEY }}
          host: ${{ secrets.DOWNLOADS_SERVER_IP }}
          files: |
            fabric/build/libs/hydraulic-fabric.jar
            neoforge/build/libs/hydraulic-neoforge.jar
